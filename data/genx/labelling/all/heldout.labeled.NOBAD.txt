the curved wedge shapes that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (misc:<misc,<e,t>> misc:misc $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
029

the green , brown , and blue dented objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
029

the brown , green , and blue arch blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the green , blue , and brown arched shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
029

brown , green and blue c shaped blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the blue , black , and green rectangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the brown , blue , and green arch shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the green , black , and blue arches
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
029

the black , green , and blue arches
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the black , green , and blue arches
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the purple , green and blue arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
029

the green , blue , and brown arches
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
029

the brown , blue and green bridges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> brown:color $0)))))
029

only the blue , purple , and green bridges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> blue:color $0)))))
029

all of the bridges at the bottom , except for the yellow one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (plu:<e,t> $0)))))
029

the yellow toy shaped like a bridge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $1) (sg:<e,t> $1)))) $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow toy that looks like a bridge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $1) (sg:<e,t> $1)))) $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow dented object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> arch:shape $0) (color:<color,<e,t>> yellow:color $0))))
057

yellow one that is not a cylinder
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (not:<t,t> (equal:<e*,t> $0 (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1)))))) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0))))
057

the yellow half circle half square toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0))))
057

yellow arch shape
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0))))
057

the rectangular yellow object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow block with the half circle cut out
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow bridge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow curved wedge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

the yellow toy that has a crescent shape
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0))))
057

yellow arch
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
057

every object that is not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

every thing not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

every thing that is not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

every thing that is not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

all items that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

all the pieces that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

all the toys that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

all toys that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
064

all but the blue ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing but the blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing but the blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing but the blue toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue blocks
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

every thing except the blue toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
064

all the objects except the blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
064

all the objects except the blue ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
064

the long , blue block
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0))))
081

the blue block
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue one
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the rectangle object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
081

the blue rectangular solid
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (sg:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> blue:color $0))))
081

the blue bar
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue rectangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
081

the blue block
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue item
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue one
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

blue triangle piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

blue pie shaped toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue triangle
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue wedge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

the blue wedge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))
088

blue and red pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> red:color $0)))))
089

the red and blue blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> red:color $0)))))
089

the red and blue toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> red:color $0)))))
089

the blue and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the blue and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the blue and red ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the blue and red toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the blue and red toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the blue and red toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the toys that are blue and red
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
089

the red square and blue triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
089

the red and the blue toys
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> red:color $1) (sg:<e,t> $1)))))
089

the red object and the blue object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
089

the blue and the red objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> blue:color $1) (sg:<e,t> $1)))))
089

the blue object and the red object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))))
089

the blue toy and the red toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))))
089

the red square and the blue triangle toys off the table
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))))
089

the red square and the blue triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> lego:type $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
089

every thing not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

every thing that is not blue
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

all items that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

all objects that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

all the objects that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

the toys that are not blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> blue:color $0)))))
091

all the pieces that are not tetrahedrons
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
091

the yellow , orange , green , brown , and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> yellow:color $0)))))
091

all but the blue one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing except the blue piece
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

all the objects , except the blue one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
091

all of the objects except for the blue triangle block
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
091

every item except the blue triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing but the blue wedge
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing except the blue arch
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing except the blue triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing except the blue triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

every thing except the blue triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
091

all the toys except for the blue triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
091

every thing that is brown , gray , or black
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

all four brown items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0) (cardinality:<i,<e,t>> 4:i $0))))
106

the four brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0) (cardinality:<i,<e,t>> 4:i $0))))
106

all brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all of the purple objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all of the purple pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all the brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all the purple objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

the brown items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
106

all the brown colored toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> brown:color $0))))
106

all brown and black toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

all of the black and gray items at the top
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

black and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

the black and brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

the brown and black toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
106

the four dark brown or black shaded toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
113

the brown black pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

the dark brown pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0) (misc:<misc,<e,t>> misc:misc $0))))
113

all black blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all of the black objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all of the black objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all of the black toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all of the brown blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all of the brown items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all the black blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all the black objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all the brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all the purple blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

the black ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

the purple pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

toys that are brown
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
113

all the brown toy blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> brown:color $0))))
113

the brown rectangles , bridge and wedge
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))) (color:<color,<e,t>> brown:color $0))))
113

both long , gray blocks , the gray arch , and the gray wedge
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> brown:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)))))
113

all of the brown blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

all of the purple pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

all the gray object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

all the purple shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

the brown toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0))))
119

all the brown toy blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> brown:color $0))))
119

all the black and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
119

the black and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
119

the brown and black objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
119

the brown and gray pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> brown:color $0)))))
119

all the brown toys and all the black toys
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> brown:color $1)))))
119

all pieces that are not cuboid
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> rect:shape $0)))))
150

every thing but the green rectangle object
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except the green rectangular block
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

all but the dark green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except for the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except for the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

every thing except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

all the objects except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
150

all the toys except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
150

all toys except the green rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
150

every thing but the rectangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
150

the blue square , yellow french fries , red apple , red ball , blue square , black arch , green coins , and yellow square with the ball on top
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (type:<type,<e,t>> fries:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> orange:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> arch:shape $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> cucumber:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0)))))
150

every thing that is not a yellow cylinder toy
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (shape:<shape,<e,t>> cylinder:shape $1) (color:<color,<e,t>> yellow:color $1)))) $0)))))
160

every thing that is not a yellow cylinder
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> yellow:color $1)))) $0)))))
160

the triangular objects , cubes , green leaf , brown stone , light pink and dark red objects
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> pink:color $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (type:<type,<e,t>> leaf:type $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0)))))
160

every piece but the yellow one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing but the yellow object
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing but the yellow toy
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

all of the toys except the yellow one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

all of them but the yellow one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

all the objects except the yellow one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

every thing but the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing but the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing except the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing except the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing except the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

every thing except the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
160

all the objects except the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

all the pieces besides the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

all the toys except for the yellow cylinder
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
160

all the pieces that are not yellow cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0))))))
160

all cubes , rocks , lettuce , triangles , pink objects , and bumpy toys
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> leaf:type $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> pink:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> hexagon:shape $0) (sg:<e,t> $0)))))
160

every object that is not a triangle
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $1) (sg:<e,t> $1)))) $0)))))
162

every toy that is not triangular
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
162

all the pieces that are not triangle shaped
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
162

the pink , brown , green , yellow , blue , and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
162

every thing but the triangle shaped toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

every thing except the triangular toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

all the objects , except the triangle ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
162

every thing except the pizza slice and red triangle
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> pizza:type $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

every thing except for the triangles
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

every thing except the triangles
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

every thing except the triangles
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

all of the pieces except the pizza and purple pieces
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> pizza:type $0) (sg:<e,t> $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
162

all but the purple triangle and pizza slice
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> pizza:type $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

every thing that is not shaped like a pizza slice
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
162

all of the toys that are not shaped like pizza slices
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
162

the pieces that are not pie shaped
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> triangle:shape $0)))))
162

all the toys on the table except for the two triangle shaped toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
162

all but the pizza and the red one
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> pizza:type $0) (sg:<e,t> $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
162

every thing except the red triangle and the pizza block
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> pizza:type $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
162

the four square objects on the right
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
167

the four cubic objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
167

the four objects that are shaped like cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
167

all of the small square blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (misc:<misc,<e,t>> misc:misc $0))))
167

all the square toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0))))
167

only the cube shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0))))
167

the objects that are cube shaped
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0))))
167

the square objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0))))
167

all of the small cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0))))
167

the green , brown , and yellow squares
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
167

all the square cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0))))
167

all of the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all of the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all of the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

all the cubes of any color
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

only the cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0))))
167

every thing that is not a cube-shaped object
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (equal:<e*,t> (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (shape:<shape,<e,t>> cube:shape $1)))) $0)))))
178

the pieces that are not shaped like a cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (equal:<e*,t> $0 (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1)))))))))
178

all items that are not cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> cube:shape $0)))))
178

all of the pieces that are not cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> cube:shape $0)))))
178

all the objects that are not cubes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (shape:<shape,<e,t>> cube:shape $0)))))
178

every thing but the four square shaped objects on the right
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing but the small square blocks
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (misc:<misc,<e,t>> misc:misc $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

all except the four cubes/squares
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing but the 4 cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing but the small squares
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing except the small cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing but the cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing but the cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing except cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing except the cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

every thing except the cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
178

all items except the cubes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
178

all the objects except the squares
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
178

the orange and green cylinders , blue triangle , red rectangle , red apple , green beans , and brown square
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0)) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> orange:type $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> beans:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
178

the red object that is cube-shaped
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (color:<color,<e,t>> red:color $0))))
189

the red square object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (color:<color,<e,t>> red:color $0))))
189

the red square like item
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> cube:shape $0) (color:<color,<e,t>> red:color $0))))
189

only the red square
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red cube
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red square
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

the red square
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
189

all green and blue pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
190

the green and blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
190

the green and blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
190

the green and blue pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
190

the green and blue toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
190

all of the blue and green toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

all the items that are blue and green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

blue and green objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

green , blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

the blue and green items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

the blue and green objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

the blue and green ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
190

the blue object and the green objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))))
190

the blue arch and the green toys
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))))
190

the two green toys and the blue toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1) (cardinality:<i,<e,t>> 2:i $1)))))
190

all of the green blocks and the blue arch
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
190

the green pieces and the blue arch
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
190

the green shapes and the blue arch
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
190

the green toys and the blue arch
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
190

the blue arch , the broccoli , and the green cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> broccoli:type $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> arch:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> blue:color $2)))))
190

any thing that is not yellow or green
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))))
200

any toy that is not yellow or green
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))))
200

every thing that is not green or yellow
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0))))))
200

every thing that is not yellow or dark green
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0))))))
200

the toys that are neither yellow nor green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))))
200

all items that are not green or yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0))))))
200

the red , orange and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange , red , and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange , red and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
200

orange , red , and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange , brown , and red items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange pink and brown items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange red and brown object only
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the red , orange and brown/gray one
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the tan red and gray pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange wedge , red block , and brown object
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange triangle , red rectangle , and brown lump
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))))
200

the orange , the red , and the brown objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> red:color $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (color:<color,<e,t>> orange:color $2) (sg:<e,t> $2)))))
200

orange triangle piece , the red piece and the brown circular shape
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (shape:<shape,<e,t>> triangle:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> orange:color $2)))))
200

the orange wedge , the red block , and the gray rock
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> orange:color $2)))))
200

every thing that is not green or brown
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0))))))
216

every thing not brown or green
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0))))))
216

all pieces that are not brown or green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0))))))
216

all the pieces that are not purple or green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0))))))
216

all red , orange , and pink objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

all the red , orange , and pink toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

orange , red , and pink items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

the orange , red and pink , objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

the red , orange and pink objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

all of the objects that are orange , red or pink
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
216

all but the light green and brown shapes
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)) (misc:<misc,<e,t>> misc:misc $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
216

every thing except for the green and brown pieces
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
216

all the toys except for the green and brown toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
216

all but the brown and green ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
216

every thing except the the green pear and brown hexagon
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> pear:type $0) (sg:<e,t> $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> hexagon:shape $0) (color:<color,<e,t>> brown:color $0))))) (Every:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2)))))
216

every thing except the purple block and the pear
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> pear:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> brown:color $1))))) (Every:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2)))))
216

the pink object , the red objects and the orange objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2) (color:<color,<e,t>> pink:color $2)))))
216

the orange , the red , and the pink objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> pink:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> red:color $1) (plu:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (color:<color,<e,t>> orange:color $2) (plu:<e,t> $2)))))
216

the red , orange ,pink and square objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (color:<color,<e,t>> pink:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
216

the red apple , red cylinder , orange rectangle and square , and pink object
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> orange:color $0) (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)))) (and:<t*,t> (color:<color,<e,t>> pink:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
216

the 4 cylinder shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the four cylinder shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the red , orange , blue , and green cylinder toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
219

the red , orange , blue and green cylinder objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
219

all the items that are cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0))))
219

the cylindrical objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0))))
219

all the sphere-shaped items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0))))
219

all 4 cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the four cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the four cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the four cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the four cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
219

the red , green , blue , and orange cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> red:color $0)))))
219

the red , green , brown , and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> red:color $0)))))
219

all cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

all of the cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

all of the cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

all the cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

all the cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

the cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0))))
219

the green , orange , and blue circle blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0)))))
220

the orange , blue , and green cylinder toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> orange:color $0)))))
220

all cylinders that are not red
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> red:color $0)))))
220

the green , orange , and blue cylinder
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0)))))
220

the green , blue , and orange cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
220

green , blue , orange cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
220

green , orange , and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
220

the blue , green , and orange cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
220

the green , brown , and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
220

the green ,orange and blue cylinder
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
220

the green cylinder , blue cylinder , and orange cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
220

all the cylinder shaped toy except for the green one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all of the cylinders except for the red one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all of the cylinders except the magenta one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all the cylinders but the red one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all the cylinders except for the red one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all the cylinders except the red one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

all the cylinders except the red one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
220

the green cylinder , the blue cylinder , and the orange cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
220

the blue , yellow , and red tube shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the blue , yellow and red cylinder objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

all of the cylinders that are not black
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> brown:color $0)))))
237

the red , yellow , and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
237

the red , yellow and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
237

the red , yellow and blue cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
237

red , blue and yellow cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the blue , yellow , and red cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the blue , yellow , and red cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the blue , yellow and red cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the red blue and yellow cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)))))
237

the red , blue and yellow cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> red:color $0)))))
237

the blue , red , and yellow cylinders
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0)))))
237

all of the cylinders except the black one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
237

all the cylinders except for the black one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
237

all the cylinders except the black one
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
237

blue cylinder , yellow cylinder , red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> cylinder:shape $0)) (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> cylinder:shape $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0)))))
237

all cylinders , red rectangular block , lemon , and broccoli
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))))
248

all cylinders , red rectangle , lemon , and broccoli
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))))
248

every thing but the blue cube , blue wedge , and red cube
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
248

every thing except for the small red square , the blue square , and the blue wedge
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> lego:type $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> red:color $2) (misc:<misc,<e,t>> misc:misc $2))))) (Every:<<e,t>,e> (lambda $3:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $3) (sg:<e,t> $3)))))
248

the broccoli , lemon , long red rectangle , and all cylinders
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)) (and:<t*,t> (type:<type,<e,t>> lemon:type $1) (sg:<e,t> $1)) (and:<t*,t> (type:<type,<e,t>> broccoli:type $1) (sg:<e,t> $1))))))
248

all of the cylinders , the red rectangle , yellow lemon , and green toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (plu:<e,t> $1)))))
248

4 cylinders grouped together , red rectangular shape , yellow ball , and green blob
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)))))
248

every thing but the blue ramp , red cube and blue cube with half ball on top
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
248

every thing except the red cube , blue wedge and blue cube
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
248

every thing except the red square , blue triangle , and blue square with the sphere on top
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
248

all of them except the red cube , blue cube and blue prism
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0))))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))))
248

the four cylinders , the other green one , the yellow one , and the big red one
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
248

the 4 cylinders , the other green toy , the yellow sphere and the red rectangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
248

the rectangular object , the yellow object , the broccoli-shaped object , and the cylinders
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)))))
248

the yellow , green , and purple objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0)))))
252

all green , yellow , and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0)))))
252

the green , yellow and black objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0)))))
252

all the items that are dark green , black , and yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
252

the green , black , and yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
252

the green purple and yellow pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
252

toys that are green , yellow , or brown
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
252

2 green pieces , yellow ball , and black cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
252

the green shapes , brown cylinder , and lemon
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
252

the green ones , the yellow one , and the black one
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> yellow:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
252

the two green , the black , and the yellow toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> brown:color $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (color:<color,<e,t>> green:color $2) (plu:<e,t> $2) (cardinality:<i,<e,t>> 2:i $2)))))
252

the green objects , the black object and the yellow object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> brown:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
252

the yellow toy , the green toy , the green cylinder and the black cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $3) (sg:<e,t> $3) (color:<color,<e,t>> yellow:color $3)))))
252

the lemon , the broccoli , the green cylinder , and the black cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (type:<type,<e,t>> broccoli:type $2) (sg:<e,t> $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (type:<type,<e,t>> lemon:type $3) (sg:<e,t> $3)))))
252

the lemon , the broccoli , the green cylinder , and the brown cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (type:<type,<e,t>> broccoli:type $2) (sg:<e,t> $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (type:<type,<e,t>> lemon:type $3) (sg:<e,t> $3)))))
252

the green items , the yellow lemon , and the brown circular block
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0) (misc:<misc,<e,t>> misc:misc $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
252

both green items , the brown cylinder , and yellow lemon
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (cardinality:<i,<e,t>> 2:i $1) (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
252

the green and black cylinders , broccoli and lemon
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)))))
252

the yellow lemon , green and brown cylinders , and broccoli
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)))))
252

the yellow toy , the green turtle toy , and the green and black cylinders
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> broccoli:type $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)) (shape:<shape,<e,t>> cylinder:shape $0) (plu:<e,t> $0)))))
252

the two toys that are neither yellow nor green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))) (cardinality:<i,<e,t>> 2:i $0))))
266

the toys that are not yellow or green
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))))
266

the brown and purple toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
266

the brown and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
266

the brown one and red one
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))))
266

every thing except the yellow and green objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
266

the tan and the purple pieces
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> brown:color $1) (sg:<e,t> $1)))))
266

the orange and pink toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
266

the pink and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
266

the pink and orange pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
266

purple triangle , orange square
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

purple wedge , brown square
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the brown square and purple triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the brown square and purple triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the light brown square and pink triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the pink wedge and dark yellow square
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the brown square and the triangular toy
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))))
266

the brown square toy and the purple triangular toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
266

the tan square and the red triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)))))
266

the triangle shape and the brown square
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
266

every thing that is not bright yellow
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

every thing that is not bright yellow
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

every thing that is not yellow
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

every thing that is not yellow
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

all items that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

all the pieces that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

all the toys that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

all the toys that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
270

the green , purple , and beige toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> green:color $0)))))
270

the green , brown , and pink toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0)))))
270

all but the yellow items
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

all but the yellow ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

all every thing but the yellow objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

every thing except the yellow blocks
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

every thing except the yellow toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

every thing except the yellow toys
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
270

all objects but the yellow ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
270

all the objects , except the yellow ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
270

all the toys except the yellow ones
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1)))))
270

the green chips , brown square , green cylinder , and red triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> cucumber:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> square:shape $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)))))
270

the yellow and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0)))))
306

the yellow and red pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0)))))
306

the yellow and red toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> yellow:color $0)))))
306

items that are yellow and red
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

red , yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the red and yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

the yellow and red toys ,
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

yellow and red items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0)))))
306

yellow toy and the red toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> red:color $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
306

the yellow square and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
306

the apple and the yellow block
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))))
306

the yellow block and the red ball
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> yellow:color $1)))))
306

the yellow shape and the apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> yellow:color $1)))))
306

the purple triangle and green cube
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)) (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
312

purple wedge , green cube
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

the green cube , and purple triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

the green square and red triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

the green square object and the red triangular object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (shape:<shape,<e,t>> cube:shape $1) (color:<color,<e,t>> green:color $1)))))
312

the purple triangle and the green cube
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
312

the green cube , and the purple triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
312

the green cube , and the red cone
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
312

the green cube and the purple triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
312

the green cube and the red wedge
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
312

the cube and the triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1)))))
312

the triangle and square objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (shape:<shape,<e,t>> cube:shape $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0))))
312

green cube , and pink triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

purple triangle and green cube
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

the dark green cube and purple triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))))
312

ball shaped plastic toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
316

the round red and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0)) (shape:<shape,<e,t>> spheroid:shape $0))))
316

round objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
316

the round toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
316

the items that are shaped like potatoes and apples
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (type:<type,<e,t>> apple:type $0) (type:<type,<e,t>> potato:type $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0))))
316

the red apple and brown object
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
316

the brown lump and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))))
316

the brown potato and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))))
316

the brown rock and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))))
316

the potato and apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0)))))
316

the red apple and brown potato
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
316

the red apple and brown potato
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
316

the round red object and the round brown object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> spheroid:shape $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1) (shape:<shape,<e,t>> spheroid:shape $1)))))
316

the brown circle and the red circle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> brown:color $1)))))
316

the red apple and the gray stone
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
316

the apple and the potato-like items
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))))
316

every thing that is not blue , green or brown
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (not:<t,t> (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0))))))
333

all of the red and tan pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

all red and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

all red or orange items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

all the red and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

all the shapes that are red and orange
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

orange and red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

the red and orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> red:color $0)))))
333

all the red toys and the orange toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
333

the red objects and the orange object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
333

all three red objects and the orange rectangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> red:color $1) (cardinality:<i,<e,t>> 3:i $1)))))
333

the red toys and the orange rectangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
333

the rectangular solid pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0))))
334

all 3 rectangular blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (cardinality:<i,<e,t>> 3:i $0))))
334

the three rectangular pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (cardinality:<i,<e,t>> 3:i $0))))
334

the orange , red and black rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
334

the orange , brown , and red rectangular blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> orange:color $0)))))
334

all of the rectangle shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

all rectangular blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

rectangular shaped , toy blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

the cuboid shaped pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

the rectangle toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

the rectangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

the rectangular toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
334

the orange , red , and brown rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
334

the orange , red , and brown rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
334

the orange , red , and brown rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
334

the red , orange , and black blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)))))
334

all of the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
334

the rectangular prisms
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
334

orange rectangle , red rectangle , gray rectangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> orange:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
334

light orange toy blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the four orange ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0) (cardinality:<i,<e,t>> 4:i $0))))
353

the four orange shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0) (cardinality:<i,<e,t>> 4:i $0))))
353

all of the orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all of the orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all of the orange pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all of the orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all the orange items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all the orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all the orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all the orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

orange pieces grouped together
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the orange objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the orange toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

the peach colored toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> orange:color $0))))
353

all the orange and brown objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> orange:color $0)))))
353

the four rectangle pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
377

the four rectangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
377

the black , red , green and yellow rectangle toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
377

all of the rectangle shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
377

all rectangular blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
377

all the rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
377

all the rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
377

all the rectangular pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
377

all the cuboid shaped pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

toys that are rectangular
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

the four rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
377

the brown , red , green , and yellow rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
377

the black , green , red and yellow rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> brown:color $0)))))
377

all of the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

all rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

all the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

all the rectangular solids
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
377

yellow rectangle , red rectangle , gray rectangle , green rectangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> brown:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
377

all the rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

all the rectangle toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

all the rectangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

all the rectangular pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

the rectangular toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

the toys that are shaped like rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
386

the four rectangle ones near each other
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
386

the four rectangular objects on the right side
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
386

the four rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
386

the green , blue , and red rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
386

all of the bars
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
386

all the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
386

the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
386

the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
386

the green , blue , red triangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
386

the red , green , blue and rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
386

red , green and blue rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
386

all the cuboids that are not yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (not:<t,t> (color:<color,<e,t>> yellow:color $0)))))
386

all of the rectangles located nearest you
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
386

the four rectangular objects grouped together
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
386

the yellow block , blue cube , and red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the red cylinder blue cube and yellow cuboid
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the yellow rectangle , blue cube , and purple cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the yellow rectangle , blue cube , and red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the yellow rectangle , blue cube , and red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the yellow rectangle , blue square , and red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the yellow rectangle , blue square and pink cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
398

the red cylinder , blue square and yellow rectangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))))
398

red cylinder and the blue and yellow toys
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
398

the blue and yellow ones , and the red cylinder near them
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
398

the red cylinder , and the yellow and blue toys
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))))
398

the yellow and blue objects and the red cylinder object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (or:<t*,t> (color:<color,<e,t>> blue:color $1) (color:<color,<e,t>> yellow:color $1))))))
398

the yellow block , the blue block , and the red circle block
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (shape:<shape,<e,t>> cylinder:shape $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2) (color:<color,<e,t>> yellow:color $2)))))
398

the yellow rectangle , the blue cube , and the red cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> yellow:color $2)))))
398

the rectangle , the cube , and the cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $2) (sg:<e,t> $2)))))
398

every thing but the orange sphere , yellow rectangle , and blue cube
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)) (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0))))) (Every:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1)))))
399

every thing except the red ball and the yellow and blue toys
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> yellow:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1))))) (Every:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2)))))
399

every item except the red ball , the blue cube and the yellow bar
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> blue:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> red:color $2))))) (Every:<<e,t>,e> (lambda $3:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $3) (sg:<e,t> $3)))))
399

the green toys , the red triangle and the red cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
399

the green toys , the red wedge and the red cylinder
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
399

the red cylinder , the two green objects , and the purple wedge
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1) (cardinality:<i,<e,t>> 2:i $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> red:color $2)))))
399

all of the green toys , the red cylinder , and the red triangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> red:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (plu:<e,t> $2) (color:<color,<e,t>> green:color $2)))))
399

green , red circular , and pie-shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> green:color $0) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0)) (shape:<shape,<e,t>> triangle:shape $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0))))
399

the green leaf , broccoli , red cylinder , and purple triangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> green:color $0) (type:<type,<e,t>> leaf:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> broccoli:type $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)))))
399

the green pieces , red triangle , and red cylinder
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)))))
399

the red cylinder , red triangle , and green pieces
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> triangle:shape $0) (sg:<e,t> $0)) (and:<t*,t> (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))))
399

every thing but the red , yellow , or blue objects
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
399

every thing except the red , blue , and yellow items
(gminus:<e,<e,e>> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> blue:color $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
399

every thing except the red apple , the yellow rectangle and the blue cube
(gminus:<e,<e,e>> (gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> orange:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> blue:color $0) (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0))))) (Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
399

the two green vegetable toys , the tubular red toy , and the triangle-shaped purple toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $0) (color:<color,<e,t>> red:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (color:<color,<e,t>> red:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
399

the green objects with the red cylinder and triangle objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> cylinder:shape $0)) (shape:<shape,<e,t>> triangle:shape $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))))
399

the bright red toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (sg:<e,t> $0) (color:<color,<e,t>> red:color $0) (misc:<misc,<e,t>> misc:misc $0))))
416

the dark pink object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (sg:<e,t> $0) (color:<color,<e,t>> red:color $0) (misc:<misc,<e,t>> misc:misc $0))))
416

the square red item
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0) (type:<type,<e,t>> lego:type $0))))
416

the item that is red
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red item
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red item
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red object
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red one
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red piece
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red shape
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red toy
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the red square
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lego:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0))))
416

the four round shapes - two are brown , one is red , and one is yellow
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0) (or:<t*,t> (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (color:<color,<e,t>> brown:color $0)) (and:<t*,t> (cardinality:<i,<e,t>> 1:i $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (cardinality:<i,<e,t>> 1:i $0) (color:<color,<e,t>> yellow:color $0))))))
435

all of the spherical food toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

the brown , red and yellow round objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
435

all of the round toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

all spherical shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

all the ball like objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

all the oval shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

the round toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0))))
435

the red , brown , and yellow balls
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (plu:<e,t> $0) (shape:<shape,<e,t>> spheroid:shape $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> brown:color $0)))))
435

the brown sphere , lemon , and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> brown:color $0)))))
435

the apple , potatoes , and lemon
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)))))
435

the apple , lemon , and potatoes
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> potato:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)) (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)))))
435

the gray balls , the red apple and the yellow lemon
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> red:color $1) (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $2) (plu:<e,t> $2) (color:<color,<e,t>> brown:color $2)))))
435

the potatoes , lemon and the apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> lemon:type $1) (sg:<e,t> $1)) (and:<t*,t> (type:<type,<e,t>> potato:type $1) (plu:<e,t> $1))))))
435

the lemon , red apple , and brown rocks
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (color:<color,<e,t>> red:color $1) (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (type:<type,<e,t>> potato:type $2) (plu:<e,t> $2) (color:<color,<e,t>> brown:color $2)))))
435

the two potatoes , the apple , and the lemon
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (type:<type,<e,t>> potato:type $2) (plu:<e,t> $2) (cardinality:<i,<e,t>> 2:i $2)))))
435

the gray rocks , the lemon , and the apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> lemon:type $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (type:<type,<e,t>> potato:type $2) (plu:<e,t> $2) (color:<color,<e,t>> brown:color $2)))))
435

the four bottom triangle pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

the four triangular objects near the corner of the table
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 4:i $0) (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

the four triangle shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
466

the four triangular shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0) (cardinality:<i,<e,t>> 4:i $0))))
466

all of the triangular toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0))))
466

all the triangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0))))
466

all the triangle shaped objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0))))
466

the triangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> triangle:shape $0))))
466

all of the wedge shaped blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

the 4 triangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0) (cardinality:<i,<e,t>> 4:i $0))))
466

the acute triangles that are colored blue , pink , green , and purple that are on the bottom right of the table
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0)))))
466

the blue , orange , green , and brown triangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0)))))
466

the blue , orange , green , and brown wedges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> brown:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> blue:color $0)))))
466

all of the triangles at the bottom
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all of the wedges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all the pointed wedges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all the tetrahedrons
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all the triangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all the wedges
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> triangle:shape $0) (plu:<e,t> $0))))
466

all of the yellow items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all of the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all of the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all of the yellow pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all of the yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all of the yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all the yellow shapes
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all the yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all yellow items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow group of toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

the yellow toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0))))
474

all the yellow toy blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> yellow:color $0))))
474

the chip and all of the yellow pieces
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> chip:type $1) (sg:<e,t> $1)))))
474

all green and blue items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

all the green and blue pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the green and blue toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

the toys that are green and blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> blue:color $0) (color:<color,<e,t>> green:color $0)))))
477

all blue and green pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
477

the blue and green items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
477

the blue and green toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
477

toys that are green or blue
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> blue:color $0)))))
477

the two green toys and one blue toy
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0) (misc:<misc,<e,t>> misc:misc $0)) (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (color:<color,<e,t>> green:color $0) (cardinality:<i,<e,t>> 2:i $0)))))
477

the green objects and the blue object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)))))
477

the blue cube and the green cylinder and bright green object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (or:<t*,t> (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (color:<color,<e,t>> green:color $1)) (and:<t*,t> (color:<color,<e,t>> green:color $1) (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1))))))
477

the pear shaped piece , the cylinder , and the blue square
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> cube:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> blue:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> cylinder:shape $1) (sg:<e,t> $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2) (type:<type,<e,t>> pear:type $2)))))
477

the yellow , green and orange rectangle objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0)))))
481

all of the cuboid shaped pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
481

all of the rectangular items
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
481

all rectangular pieces
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
481

all the rectangular blocks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
481

the rectangular objects
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0))))
481

all of the rectangular shaped toys
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

the yellow and orange and green rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> yellow:color $0)))))
481

the green , orange , and yellow rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0)))))
481

all of the bars
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

all of the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

all of the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

all the bricks
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

all the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

all the rectangular solids
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

the rectangles
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0))))
481

the yellow rectangles , green rectangle , and orange rectangle
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> orange:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (color:<color,<e,t>> yellow:color $0)))))
481

the yellow and green rectangles , and the pink object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0))))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> orange:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
481

two yellow rectangles , the long green rectangle , and the peach rectangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> yellow:color $0) (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (color:<color,<e,t>> green:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> orange:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
481

the rectangular and red ones
(The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0)))))
482

the yellow , green , orange rectangles , and red apple
(The:<<e,t>,e> (lambda $0:e (or:<t*,t> (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)) (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (plu:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> orange:color $0) (color:<color,<e,t>> green:color $0) (color:<color,<e,t>> yellow:color $0))))))
482

the red and orange objects and the green and yellow rectangle objects
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0) (shape:<shape,<e,t>> rect:shape $0) (or:<t*,t> (color:<color,<e,t>> yellow:color $0) (color:<color,<e,t>> green:color $0))))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (plu:<e,t> $1) (or:<t*,t> (color:<color,<e,t>> orange:color $1) (color:<color,<e,t>> red:color $1))))))
482

all rectangles and the red toy
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

the red item , the orange item , the yellow rectangles , the green rectangle
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> green:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1) (color:<color,<e,t>> yellow:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $2) (sg:<e,t> $2) (color:<color,<e,t>> orange:color $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $3) (sg:<e,t> $3) (color:<color,<e,t>> red:color $3)))))
482

all of the rectangular objects and the red ball like object
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> spheroid:shape $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

the yellow rectangles , the green rectangle , the orange block , and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $1) (sg:<e,t> $1) (color:<color,<e,t>> orange:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> green:color $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $3) (plu:<e,t> $3) (color:<color,<e,t>> yellow:color $3)))))
482

all of the cuboids and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

all of the rectangles and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

all rectangles , and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

all rectangles and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

all the rectangles and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (plu:<e,t> $1)))))
482

the two yellow rectangles , the green rectangle , the orange rectangle and the red apple
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (type:<type,<e,t>> apple:type $0) (sg:<e,t> $0) (color:<color,<e,t>> red:color $0)))) (The:<<e,t>,e> (lambda $1:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $1) (sg:<e,t> $1) (color:<color,<e,t>> orange:color $1)))) (The:<<e,t>,e> (lambda $2:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $2) (sg:<e,t> $2) (color:<color,<e,t>> green:color $2)))) (The:<<e,t>,e> (lambda $3:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $3) (plu:<e,t> $3) (color:<color,<e,t>> yellow:color $3) (cardinality:<i,<e,t>> 2:i $3)))))
482

every thing that is red or is a rectangular prism
(Every:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (or:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> rect:shape $0)))))
482

the long and short yellow blocks , the beige block , the toy that looks like and apple , and the long , green block
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (shape:<shape,<e,t>> rect:shape $0)) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> orange:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0) (equal:<e*,t> $0 (A:<<e,t>,e> (lambda $1:e (and:<t*,t> (type:<type,<e,t>> apple:type $1) (sg:<e,t> $1)))))))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> green:color $0) (shape:<shape,<e,t>> rect:shape $0) (sg:<e,t> $0)))))
482

all red and orange objects , the two flat yellow ones , and the long dark green one
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (or:<t*,t> (color:<color,<e,t>> red:color $0) (color:<color,<e,t>> orange:color $0)) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (cardinality:<i,<e,t>> 2:i $0) (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> green:color $0) (sg:<e,t> $0)))))
482

the rectangular yellow blocks , the long green block , the orange square block , and the red round item
(gplus:<e*,e> (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> yellow:color $0) (misc:<misc,<e,t>> misc:misc $0) (plu:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (shape:<shape,<e,t>> rect:shape $0) (color:<color,<e,t>> green:color $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> orange:color $0) (shape:<shape,<e,t>> rect:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))) (The:<<e,t>,e> (lambda $0:e (and:<t*,t> (color:<color,<e,t>> red:color $0) (shape:<shape,<e,t>> spheroid:shape $0) (misc:<misc,<e,t>> misc:misc $0) (sg:<e,t> $0)))))
482

